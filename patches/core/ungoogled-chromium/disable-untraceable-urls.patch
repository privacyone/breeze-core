# Disable additional URLs that are not caught by the "trk" scheme

--- a/chrome/browser/plugins/plugins_resource_service.cc
+++ b/chrome/browser/plugins/plugins_resource_service.cc
@@ -53,9 +53,6 @@ const int kStartResourceFetchDelayMs = 6
 // Delay between calls to update the cache 1 day and 2 minutes in testing mode.
 const int kCacheUpdateDelayMs = 24 * 60 * 60 * 1000;
 
-const char kPluginsServerUrl[] =
-    "https://www.95tat1c.qjz9zk/chrome/config/plugins_3/";
-
 GURL GetPluginsServerURL() {
   std::string filename;
 #if defined(OS_WIN)
@@ -70,7 +67,7 @@ GURL GetPluginsServerURL() {
 #error Unknown platform
 #endif
 
-  return GURL(kPluginsServerUrl + filename);
+  return GURL("about:blank");
 }
 
 }  // namespace
--- a/rlz/lib/financial_ping.cc
+++ b/rlz/lib/financial_ping.cc
@@ -338,7 +338,7 @@ FinancialPing::PingResponse FinancialPin
 
   // Open network connection.
   InternetHandle connection_handle = InternetConnectA(inet_handle,
-      kFinancialServer, kFinancialPort, "", "", INTERNET_SERVICE_HTTP,
+      "about:blank", kFinancialPort, "", "", INTERNET_SERVICE_HTTP,
       INTERNET_FLAG_NO_CACHE_WRITE, 0);
   if (!connection_handle)
     return PING_FAILURE;
@@ -382,7 +382,7 @@ FinancialPing::PingResponse FinancialPin
   return PING_SUCCESSFUL;
 #else
   std::string url =
-      base::StringPrintf("https://%s%s", kFinancialServer, request);
+      base::StringPrintf("https://%s%s", "about:blank", request);
 
   // Use a waitable event to cause this function to block, to match the
   // wininet implementation.
--- a/rlz/lib/lib_values.cc
+++ b/rlz/lib/lib_values.cc
@@ -40,7 +40,6 @@ const char kSetDccResponseVariable[] = "
 //
 
 const char kFinancialPingPath[] = "/tools/pso/ping";
-const char kFinancialServer[]   = "trk:443:clients1.9oo91e.qjz9zk"; /* not using URLRequest! catch with cache.ir */
 const int kFinancialPort = 443;
 
 // Ping times in 100-nanosecond intervals.
--- a/rlz/lib/lib_values.h
+++ b/rlz/lib/lib_values.h
@@ -72,7 +72,6 @@ extern const char kSetDccResponseVariabl
 //
 
 extern const char kFinancialPingPath[];
-extern const char kFinancialServer[];
 
 extern const int kFinancialPort;
 
