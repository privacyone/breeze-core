--- a/chrome/browser/ui/views/tabs/alert_indicator.h
+++ b/chrome/browser/ui/views/tabs/alert_indicator.h
@@ -49,6 +49,7 @@
  private:
   friend class AlertIndicatorTest;
   friend class TabTest;
+  friend class AlertIndicatorMuteTab;
   class FadeAnimationDelegate;
 
   // Resets the images to display on the button to reflect |state| and the
--- a/chrome/browser/ui/views/tabs/tab.cc
+++ b/chrome/browser/ui/views/tabs/tab.cc
@@ -35,6 +35,7 @@
 #include "chrome/browser/ui/views/chrome_layout_provider.h"
 #include "chrome/browser/ui/views/frame/browser_view.h"
 #include "chrome/browser/ui/views/tabs/alert_indicator.h"
+#include "chrome/browser/ui/views/tabs/alert_indicator_mute_tab.h"
 #include "chrome/browser/ui/views/tabs/browser_tab_strip_controller.h"
 #include "chrome/browser/ui/views/tabs/tab_close_button.h"
 #include "chrome/browser/ui/views/tabs/tab_controller.h"
@@ -225,7 +225,7 @@
 
   icon_ = AddChildView(std::make_unique<TabIcon>());
 
-  alert_indicator_ = AddChildView(std::make_unique<AlertIndicator>(this));
+  alert_indicator_ = AddChildView(std::make_unique<AlertIndicatorMuteTab>(this));
 
   // Unretained is safe here because this class outlives its close button, and
   // the controller outlives this Tab.
@@ -1000,6 +1000,7 @@
       available_width -= favicon_width;
 
     showing_close_button_ &= large_enough_for_close_button;
+    showing_close_button_ &= mouse_hovered();
     if (showing_close_button_)
       available_width -= close_button_width;
 
--- a/chrome/browser/ui/BUILD.gn
+++ b/chrome/browser/ui/BUILD.gn
@@ -3359,6 +3359,8 @@
       "views/tab_sharing/tab_sharing_ui_views.h",
       "views/tabs/alert_indicator.cc",
       "views/tabs/alert_indicator.h",
+      "views/tabs/alert_indicator_mute_tab.cc",
+      "views/tabs/alert_indicator_mute_tab.h",
       "views/tabs/browser_tab_strip_controller.cc",
       "views/tabs/browser_tab_strip_controller.h",
       "views/tabs/color_picker_view.cc",
