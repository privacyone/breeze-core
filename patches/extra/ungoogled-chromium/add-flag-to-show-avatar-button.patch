--- a/chrome/browser/ui/views/toolbar/toolbar_view.cc
+++ b/chrome/browser/ui/views/toolbar/toolbar_view.cc
@@ -241,14 +241,30 @@ void ToolbarView::Init() {
 
   std::unique_ptr<ToolbarAccountIconContainerView>
       toolbar_account_icon_container;
+
+  const base::CommandLine& command_line =
+      *base::CommandLine::ForCurrentProcess();
+  const std::string flag_value =
+      command_line.GetSwitchValueASCII("show-avatar-button");
+
+  bool in_incognito_or_guest_mode = browser_->profile()->IsOffTheRecord() ||
+                                    browser_->profile()->IsGuestSession();
+
   bool show_avatar_toolbar_button = true;
 #if BUILDFLAG(IS_CHROMEOS_ASH)
   if (!base::FeatureList::IsEnabled(chromeos::features::kAvatarToolbarButton)) {
     // ChromeOS only badges Incognito and Guest icons in the browser window.
-    show_avatar_toolbar_button = browser_->profile()->IsOffTheRecord() ||
-                                 browser_->profile()->IsGuestSession();
+    show_avatar_toolbar_button = in_incognito_or_guest_mode;
   }
 #endif
+
+  if (flag_value == "always")
+    show_avatar_toolbar_button = true;
+  else if (flag_value == "incognito-and-guest")
+    show_avatar_toolbar_button = in_incognito_or_guest_mode;
+  else if (flag_value == "never")
+    show_avatar_toolbar_button = false;
+
   if (base::FeatureList::IsEnabled(
           autofill::features::kAutofillEnableToolbarStatusChip)) {
     // The avatar button is contained inside the page-action container and
--- a/chrome/browser/ungoogled_flag_choices.h
+++ b/chrome/browser/ungoogled_flag_choices.h
@@ -13,4 +13,16 @@ const FeatureEntry::Choice kExtensionHan
      "extension-mime-request-handling",
      "always-prompt-for-install"},
 };
+const FeatureEntry::Choice kShowAvatarButtonChoices[] = {
+    {flags_ui::kGenericExperimentChoiceDefault, "", ""},
+    {"Always",
+     "show-avatar-button",
+     "always"},
+    {"Incognito and Guest",
+     "show-avatar-button",
+     "incognito-and-guest"},
+    {"Never",
+     "show-avatar-button",
+     "never"}
+};
 #endif  // CHROME_BROWSER_UNGOOGLED_FLAG_CHOICES_H_
--- a/chrome/browser/ungoogled_flag_entries.h
+++ b/chrome/browser/ungoogled_flag_entries.h
@@ -28,4 +28,8 @@
      "Force punycode hostnames",
      "Force punycode in hostnames instead of Unicode when displaying Internationalized Domain Names (IDNs).  ungoogled-chromium flag.",
      kOsAll, SINGLE_VALUE_TYPE("force-punycode-hostnames"), kBreezeFlag},
+    {"show-avatar-button",
+     "Show avatar/people/profile button",
+     "Show avatar/people/profile button in the browser toolbar.  ungoogled-chromium flag.",
+     kOsDesktop, MULTI_VALUE_TYPE(kShowAvatarButtonChoices), kBreezeFlag},
 #endif  // CHROME_BROWSER_UNGOOGLED_FLAG_ENTRIES_H_
