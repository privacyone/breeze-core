# Add --enable-stacked-tab-strip and --enable-tab-adjust-layout flags to tweak tab strip behavior

--- a/chrome/browser/ui/views/tabs/browser_tab_strip_controller.cc
+++ b/chrome/browser/ui/views/tabs/browser_tab_strip_controller.cc
@@ -83,14 +83,13 @@ using content::WebContents;
 namespace {
 
 bool DetermineTabStripLayoutStacked(PrefService* prefs, bool* adjust_layout) {
-  *adjust_layout = false;
-  // For ash, always allow entering stacked mode.
 #if BUILDFLAG(IS_CHROMEOS_ASH)
   *adjust_layout = true;
   return prefs->GetBoolean(prefs::kTabStripStackedLayout);
 #else
-  return base::CommandLine::ForCurrentProcess()->HasSwitch(
-      switches::kForceStackedTabStripLayout);
+  *adjust_layout = base::CommandLine::ForCurrentProcess()->HasSwitch("enable-tab-adjust-layout");
+  return prefs->GetBoolean(prefs::kTabStripStackedLayout) ||
+      base::CommandLine::ForCurrentProcess()->HasSwitch("enable-stacked-tab-strip");
 #endif
 }
 
--- a/chrome/browser/ungoogled_flag_entries.h
+++ b/chrome/browser/ungoogled_flag_entries.h
@@ -8,4 +8,8 @@
      "SetIpv6ProbeFalse",
      "Forces the result of the browser's IPv6 probing (i.e. IPv6 connectivity test) to be unsuccessful. This causes IPv4 addresses to be prioritized over IPv6 addresses. Without this flag, the probing result is set to be successful, which causes IPv6 to be used over IPv4 when possible.  ungoogled-chromium flag.",
      kOsAll, FEATURE_VALUE_TYPE(net::features::kSetIpv6ProbeFalse), kBreezeFlag},
+    {"enable-stacked-tab-strip",
+     "Enable stacking in the tab strip",
+     "Forces tabs to be stacked in the tab strip. Otherwise, they follow default behavior.  ungoogled-chromium flag.",
+     kOsAll, SINGLE_VALUE_TYPE("enable-stacked-tab-strip"), kBreezeFlag},
 #endif  // CHROME_BROWSER_UNGOOGLED_FLAG_ENTRIES_H_
