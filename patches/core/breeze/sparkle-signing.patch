--- a/chrome/installer/mac/signing/parts.py
+++ b/chrome/installer/mac/signing/parts.py
@@ -7,6 +7,7 @@ bundle that need to be signed, as well as providing utilities to sign them.
 """
 
 import os.path
+import collections
 
 from . import commands, signing
 from .model import CodeSignOptions, CodeSignedProduct, VerifyOptions
@@ -34,6 +35,7 @@ def get_parts(config):
         uncustomized_bundle_id = config.base_bundle_id
 
     verify_options = VerifyOptions.DEEP + VerifyOptions.STRICT
+    verify_options_sparkle = VerifyOptions.DEEP + VerifyOptions.NO_STRICT
 
     parts = {
         'app':
@@ -117,6 +119,29 @@ def get_parts(config):
                 verify_options=verify_options),
     }
 
+    # Sparkle
+    parts = collections.OrderedDict(parts)
+
+    parts['sparkle-framework-fileop'] = CodeSignedProduct(
+            '{.framework_dir}/Versions/{.version}/Frameworks/Sparkle.framework/Versions/A/Resources/Autoupdate.app/Contents/MacOS/fileop'  # noqa: E501
+            .format(config, config),
+            'fileop',
+            options=CodeSignOptions.FULL_HARDENED_RUNTIME_OPTIONS,
+            verify_options=verify_options_sparkle)
+
+    parts['sparkle-framework-autoupdate'] = CodeSignedProduct(
+            '{.framework_dir}/Versions/{.version}/Frameworks/Sparkle.framework/Versions/A/Resources/Autoupdate.app/Contents/MacOS/Autoupdate'  # noqa: E501
+            .format(config, config),
+            'org.sparkle-project.Sparkle.Autoupdate',
+            options=CodeSignOptions.FULL_HARDENED_RUNTIME_OPTIONS,
+            verify_options=verify_options_sparkle)
+
+    parts['sparkle-framework'] = CodeSignedProduct(
+            '{.framework_dir}/Frameworks/Sparkle.framework'.format(config),
+            'org.sparkle-project.Sparkle',
+            options=CodeSignOptions.FULL_HARDENED_RUNTIME_OPTIONS,
+            verify_options=verify_options_sparkle)
+
     dylibs = (
         'libEGL.dylib',
         'libGLESv2.dylib',
--- a/chrome/installer/mac/signing/signing.py
+++ b/chrome/installer/mac/signing/signing.py
@@ -69,11 +69,11 @@
         part: The |model.CodeSignedProduct| to sign. The product's |path| must
             be in |paths.work|.
     """
-    command = ['codesign', '--sign', config.identity]
+    command = ['codesign', '--force', '--sign', config.identity]
     path = os.path.join(paths.work, part.path)
     if _linker_signed_arm64_needs_force(path):
         command.append('--force')
-    if config.notary_user:
+    if True or config.notary_user: #allways append '--timestamp'
         # Assume if the config has notary authentication information that the
         # products will be notarized, which requires a secure timestamp.
         command.append('--timestamp')
