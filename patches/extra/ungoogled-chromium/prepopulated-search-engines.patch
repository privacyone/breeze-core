## template_url_prepopulate_data.cc
# Appends search engines to the returned list of prepopulated search engines.
# Only add DDG if it hasn't already been included.
#
## util.cc
# Only snyc the prepoulated search engines when initializing the database.
# Prevents search engines from being overridden in future updates.
#
--- a/components/search_engines/template_url_prepopulate_data.cc
+++ b/components/search_engines/template_url_prepopulate_data.cc
@@ -1325,6 +1325,9 @@ std::vector<std::unique_ptr<TemplateURLD
   std::vector<std::unique_ptr<TemplateURLData>> t_urls;
   for (size_t i = 0; i < num_engines; ++i)
     t_urls.push_back(TemplateURLDataFromPrepopulatedEngine(*engines[i]));
+  if (std::find(engines, engines + num_engines, &duckduckgo) == engines + num_engines) {
+    t_urls.push_back(TemplateURLDataFromPrepopulatedEngine(duckduckgo));
+  }
   return t_urls;
 }
 
--- a/components/search_engines/util.cc
+++ b/components/search_engines/util.cc
@@ -396,7 +396,7 @@ void GetSearchProvidersUsingLoadedEngine
 
   const int prepopulate_resource_keyword_version =
       TemplateURLPrepopulateData::GetDataVersion(prefs);
-  if (*resource_keyword_version < prepopulate_resource_keyword_version) {
+  if (*resource_keyword_version == 0) {
     MergeEnginesFromPrepopulateData(service, &prepopulated_urls, template_urls,
                                     default_search_provider,
                                     removed_keyword_guids);
